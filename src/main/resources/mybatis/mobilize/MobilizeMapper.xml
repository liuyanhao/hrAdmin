<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MobilizeMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_MOBILIZE
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		EMP_ID,	
		EMP_NAME,
		JOB_TYPE_ID,
		JOB_ID,
		CAUSE,	
		STATUS,	
		MOBILIZE_ID,
		STAFFEMPLOYEE_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{EMP_ID},	
		#{EMP_NAME},
		#{JOB_TYPE_ID},
		#{JOB_ID},	
		#{CAUSE},	
		#{STATUS},	
		#{MOBILIZE_ID},
		#{STAFFEMPLOYEE_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			MOBILIZE_ID = #{MOBILIZE_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			EMP_NAME = #{EMP_NAME},
		    JOB_TYPE_ID = #{JOB_TYPE_ID},
			JOB_ID = #{JOB_ID},
			CAUSE = #{CAUSE},
			STATUS = #{STATUS},
		STAFFEMPLOYEE_ID = #{STAFFEMPLOYEE_ID},
		MOBILIZE_ID = MOBILIZE_ID
		where 
		MOBILIZE_ID = #{MOBILIZE_ID}
	</update>
	<!-- 审核 -->
	<update id="audit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		STATUS = #{STATUS}
		where
		MOBILIZE_ID = #{MOBILIZE_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			MOBILIZE_ID = #{MOBILIZE_ID}
	</select>

	<!-- 通过ID获取审核信息数据 -->
	<select id="findAuditById" parameterType="pd" resultType="pd">
		SELECT m.CAUSE, m.STATUS, m.MOBILIZE_ID,
		m.JOB_TYPE_ID as NEW_JOB_TYPE_ID,
		m.JOB_ID as NEW_JOB_ID,
		 (SELECT TYPE_NAME FROM tb_job_type t2 WHERE t2.JOB_TYPE_ID = m.JOB_TYPE_ID) AS NEW_TYPE_NAME,
		(select  JOB_NAME from tb_job_message j2 where  j2.JOB_MESSAGE_ID = m.JOB_ID) AS NEW_JOB_NAME,
		 (SELECT TYPE_NAME FROM tb_job_type t WHERE t.JOB_TYPE_ID = s.JOB_TYPE_ID) AS TYPE_NAME,
		 (select JOB_NAME from tb_job_message j where  j.JOB_MESSAGE_ID = s.JOB_ID) as JOB_NAME,
		 s.STAFF_ID, s.SEX,
		 s.LEARING,
		 s.SPEIALITY,
		 s.AGE,
		 s.STIPEND_ID,
		 s.STAFFEMPLOYEE_ID,
		 s.STAFF_NAME
		FROM tb_mobilize m
		LEFT JOIN TB_STAFFEMPLOYEE s ON m.STAFFEMPLOYEE_ID = s.STAFFEMPLOYEE_ID
		WHERE 1=1
		AND s.ISROMVE =0
		AND m.STATUS = 0
		and m.MOBILIZE_ID = #{MOBILIZE_ID}
	</select>


	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件 -->
					EMP_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
	</select>
	<!-- 审核 列表 -->
	<select id="auditListPage" parameterType="page" resultType="pd">
		select
		CAUSE, STATUS, MOBILIZE_ID,
		(select  TYPE_NAME from tb_job_type t where t.JOB_TYPE_ID = j.JOB_TYPE_ID) as TYPE_NAME,
		j.JOB_NAME,
		s.STAFF_ID,
		s.SEX,
		s.LEARING,
		s.SPEIALITY,
		s.AGE,
		s.STIPEND_ID,
		s.STAFF_NAME,
		s.STAFFEMPLOYEE_ID,
		s.STAFFEMPLOYEE_ID
		from <include refid="tableName"></include> m left join TB_STAFFEMPLOYEE s
		on m.STAFFEMPLOYEE_ID = s.STAFFEMPLOYEE_ID
		,tb_job_message j
		where
		j.JOB_MESSAGE_ID = s.JOB_ID
		and s.ISROMVE =0
		and m.STATUS = 0
		<if test="pd.LEARING != null">
			and LEARING LIKE CONCAT(CONCAT('%', #{pd.LEARING}),'%')
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件  -->
			STAFF_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			SPEIALITY  LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
	</select>


	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			MOBILIZE_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- lxc 1094921525qq -->
</mapper>