<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StaffEmployeeMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_STAFFEMPLOYEE
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		STAFF_ID,	
		SEX,	
		ADDRESS,	
		PHONE,	
		PIC,	
		CARD_ID,	
		EMAIL,	
		QQ,	
		WECHAT,	
		POST_CODE,	
		GOVEMMET,	
		NATION,	
		LEARING,	
		HOBBY,	
		SUIT,	
		NATIONALITY,	
		BIRTH,	
		FAITH,	
		SPEIALITY,	
		RESUME,
		DESCRIBES,
		REMARK,	
		ISROMVE,	
		JOB_ID,	
		USER_ID,	
		AGE,	
		ADD_TIME,	
		STIPEND_ID,	
		CREATE_TIME,	
		UPDATE_TIME,	
		CREATE_USER,	
		UPDATE_USER,	
		STAFF_NAME,	
		STAFFEMPLOYEE_ID,
		STATES
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{STAFF_ID},	
		#{SEX},	
		#{ADDRESS},	
		#{PHONE},	
		#{PIC},	
		#{CARD_ID},	
		#{EMAIL},	
		#{QQ},	
		#{WECHAT},	
		#{POST_CODE},	
		#{GOVEMMET},	
		#{NATION},	
		#{LEARING},	
		#{HOBBY},	
		#{SUIT},	
		#{NATIONALITY},	
		#{BIRTH},	
		#{FAITH},	
		#{SPEIALITY},	
		#{RESUME},	
		#{DESCRIBES},
		#{REMARK},	
		#{ISROMVE},	
		#{JOB_ID},	
		#{USER_ID},	
		#{AGE},	
		#{ADD_TIME},	
		#{STIPEND_ID},	
		#{CREATE_TIME},	
		#{UPDATE_TIME},	
		#{CREATE_USER},	
		#{UPDATE_USER},	
		#{STAFF_NAME},	
		#{STAFFEMPLOYEE_ID},
		#{STATES}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STAFFEMPLOYEE_ID = #{STAFFEMPLOYEE_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STAFF_ID = #{STAFF_ID},
			SEX = #{SEX},
			ADDRESS = #{ADDRESS},
			PHONE = #{PHONE},
			PIC = #{PIC},
			CARD_ID = #{CARD_ID},
			EMAIL = #{EMAIL},
			QQ = #{QQ},
			WECHAT = #{WECHAT},
			POST_CODE = #{POST_CODE},
			GOVEMMET = #{GOVEMMET},
			NATION = #{NATION},
			LEARING = #{LEARING},
			HOBBY = #{HOBBY},
			SUIT = #{SUIT},
			NATIONALITY = #{NATIONALITY},
			BIRTH = #{BIRTH},
			FAITH = #{FAITH},
			SPEIALITY = #{SPEIALITY},
			RESUME = #{RESUME},
			DESCRIBES = #{DESCRIBES},
			REMARK = #{REMARK},
			ISROMVE = #{ISROMVE},
			JOB_ID = #{JOB_ID},
			USER_ID = #{USER_ID},
			AGE = #{AGE},
			ADD_TIME = #{ADD_TIME},
			STIPEND_ID = #{STIPEND_ID},
			CREATE_TIME = #{CREATE_TIME},
			UPDATE_TIME = #{UPDATE_TIME},
			CREATE_USER = #{CREATE_USER},
			UPDATE_USER = #{UPDATE_USER},
			STAFF_NAME = #{STAFF_NAME},
			STATES = #{STATES},
		STAFFEMPLOYEE_ID = STAFFEMPLOYEE_ID
		where 
		STAFFEMPLOYEE_ID = #{STAFFEMPLOYEE_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		t.TYPE_NAME,
		j.JOB_NAME,
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>  s
		left join tb_job_message  j on s.JOB_ID = j.JOB_MESSAGE_ID,
		tb_job_type t
		where 1=1
		and ISROMVE =0
		and t.JOB_TYPE_ID = j.JOB_TYPE_ID
		and	STAFFEMPLOYEE_ID = #{STAFFEMPLOYEE_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件-->
					STAFF_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					STAFF_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
			        PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					WECHAT LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					QQ LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and ADD_TIME &gt;= #{pd.lastStart}
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and ADD_TIME &lt;= #{pd.lastEnd}
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STAFFEMPLOYEE_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<select id="statePassPage" parameterType="page" resultType="pd" >
		select
		t.TYPE_NAME,
		j.JOB_NAME,
		<include refid="Field"></include>
		from
		<include refid="tableName"></include> s
		left join tb_job_message  j on s.JOB_ID = j.JOB_MESSAGE_ID,
		tb_job_type t
		where 1=1
		and ISROMVE =0
		and t.JOB_TYPE_ID = j.JOB_TYPE_ID
		AND STATES = #{pd.STATES}
		<if test="pd.LEARING != null">
			and LEARING LIKE CONCAT(CONCAT('%', #{pd.LEARING}),'%')
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"> <!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			STAFF_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			SPEIALITY  LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
	</select>

	<!-- lxc 1094921525qq -->
</mapper>