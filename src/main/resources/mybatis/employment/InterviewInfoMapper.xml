<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="InterviewInfoMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_INTERVIEWINFO
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		RESUME_ID,	
		EMPLOYEE_STATE,	
		EMPLOYEE_TIME,	
		RESUME_USER_ID,	
		RESUME_USER_NAME,	
		INTERVIEWINFO_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{RESUME_ID},	
		#{EMPLOYEE_STATE},	
		#{EMPLOYEE_TIME},	
		#{RESUME_USER_ID},	
		#{RESUME_USER_NAME},	
		#{INTERVIEWINFO_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			INTERVIEWINFO_ID = #{INTERVIEWINFO_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			EMPLOYEE_STATE = #{EMPLOYEE_STATE},
			EMPLOYEE_TIME = #{EMPLOYEE_TIME},
			RESUME_USER_ID = #{RESUME_USER_ID},
			RESUME_USER_NAME = #{RESUME_USER_NAME},
		INTERVIEWINFO_ID = INTERVIEWINFO_ID
		where 
		INTERVIEWINFO_ID = #{INTERVIEWINFO_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			INTERVIEWINFO_ID = #{INTERVIEWINFO_ID}
	</select>

	<!-- 录取列表  -->
	<select id="empolyListPage" parameterType="page" resultType="pd">
		select
		i.RESUME_ID,
		r.STAFF_NAME,
		r.SEX,
		u.NAME,
		EMPLOYEE_STATE,
		EMPLOYEE_TIME,
		RESUME_USER_ID,
		RESUME_USER_NAME,
		INTERVIEWINFO_ID,
		jt.TYPE_NAME,
		jm.JOB_NAME
		from  tb_interviewinfo i left join tb_resume r on i.RESUME_ID = r.RESUME_ID ,
		tb_job_type jt ,tb_job_message jm ,sys_user u
		where 1=1
		and  jt.JOB_TYPE_ID = r.JOB_TYPE_ID
		and jm.JOB_MESSAGE_ID = r.JOB_MESSAGE_ID
		and u.USER_ID = r.USER_ID
		<if test="pd.EMPLOYEE_STATE != null and pd.EMPLOYEE_STATE != ''">
			and	i.EMPLOYEE_STATE = #{pd.EMPLOYEE_STATE}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件 -->
			i.RESUME_USER_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and i.EMPLOYEE_TIME &gt;= #{pd.lastStart}
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and i.EMPLOYEE_TIME &lt;= #{pd.lastEnd}
		</if>
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		i.RESUME_ID,
		r.STAFF_NAME,
		r.SEX,
		u.NAME,
		EMPLOYEE_STATE,
		EMPLOYEE_TIME,
		RESUME_USER_ID,
		RESUME_USER_NAME,
		INTERVIEWINFO_ID,
		jt.TYPE_NAME,
		jm.JOB_NAME
		from  tb_interviewinfo i left join tb_resume r on i.RESUME_ID = r.RESUME_ID ,
		tb_job_type jt ,tb_job_message jm ,sys_user u
		where 1=1
		and  jt.JOB_TYPE_ID = r.JOB_TYPE_ID
		and jm.JOB_MESSAGE_ID = r.JOB_MESSAGE_ID
		and u.USER_ID = r.USER_ID
		<if test="pd.EMPLOYEE_STATE != null and pd.EMPLOYEE_STATE != ''">
			and	i.EMPLOYEE_STATE = #{pd.EMPLOYEE_STATE}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件 -->
			i.RESUME_USER_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and i.EMPLOYEE_TIME &gt;= #{pd.lastStart}
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and i.EMPLOYEE_TIME &lt;= #{pd.lastEnd}
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			INTERVIEWINFO_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- lxc 1094921525qq -->
</mapper>